name: CI

on:
  push:
    branches:
      - main
      - feat/**
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1-mesa-dev \
            libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev \
            libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxext-dev \
            libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev \
            libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev \
            libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev \
            libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev \
            libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev \
            libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev \
            libxcb-cursor-dev libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev \
            libxcb-ewmh-dev libxcb-res0-dev

      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          python -m pip install conan

      - name: Detect Conan profile
        run: conan profile detect --force

      - name: Install dependencies
        run: conan install . -of build -s build_type=Debug --build=missing

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake \
            -DCMAKE_PREFIX_PATH="$PWD/build"

      - name: Build
        run: cmake --build build -j

      - name: Run tests
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            ctest --test-dir build --output-on-failure -C Debug
          else
            ctest --test-dir build --output-on-failure
          fi
